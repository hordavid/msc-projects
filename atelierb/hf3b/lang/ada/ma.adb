-- File /home/feri/AB40_ws1/hf3b/lang/ada/ma.adb
-- generated by Atelier-B/blk on Tue Apr 17 17:43:32 2018
-- from input file /home/feri/AB40_ws1/hf3b/lang/ada/ma.bod
-- WARNING : "sets#T_1" has been renamed into "array_type_1"
-- WARNING : "sets#T_2" has been renamed into "array_type_1"
-- WARNING : "sets#T_3" has been renamed into "array_type_1"
-- WARNING : "sets#T_4" has been renamed into "array_type_2"
-- File ma.bod
-- generated by Atelier-B/tbada on Tue Apr 17 17:43:32 2018
-- from input_file ma.imp, checksum 425c95290a5ed3dd5d832594a929f60a
-- WARNING : this component has not been fully proved
-- THERE ARE THEREFORE NO GUARANTEES ABOUT THIS FILE

-- ma_i;
-- * Creation date: 2016.03.18.
-- 
package body ma is
	
	--------------------
	-- INITIALISATION --
	--------------------
	procedure IMPORTS(this : in PTR_ma) is
	begin
		-- Component does not import any machine
		null ;
		-- Component does not extend any machine
		null ;
		-- Instance is not initialised
		this.initialisation := FALSE ;
	end IMPORTS ;
	-- SEES BASIC_IO
	procedure SET_BASIC_IO(
		this : in PTR_ma ;
		new_BASIC_IO : BASIC_IO.PTR_BASIC_IO) is
	begin
		this.ref_BASIC_IO := new_BASIC_IO ;
	end SET_BASIC_IO ;
	procedure INITIALISATION(this : in PTR_ma) is
	begin
		if (this.initialisation = TRUE)
		then
			return ;
		end if ;
		this.initialisation := TRUE ;
		-- Initialisation of seen machines
		BASIC_IO.INITIALISATION(this.ref_BASIC_IO) ;
		-- INITIALISATION clause
		this.via1c := FALSE ;
		this.vib1c := FALSE ;
		this.tac := (1 .. 5 => FALSE) ;
		this.tbc := (1 .. 5 => FALSE) ;
		this.tmc := (1 .. 5 => FALSE) ;
		this.vm := FALSE ;
		this.viu1 := FALSE ;
		this.tuc := (1 .. 5 => 0) ;
	end INITIALISATION ;
	----------------
	-- OPERATIONS --
	----------------
	procedure init(this : in PTR_ma) is
	begin
		this.viu1 := FALSE ;
		this.via1c := FALSE ;
		this.vib1c := FALSE ;
		this.vm := FALSE ;
	end init ;
	
	procedure mbe(this : in PTR_ma) is
		ii : INTEGER ;
		tt : INTEGER ;
	begin
		--        be
		ii := 1 ;
		tt := 0 ;
		while (ii <= 5) loop
			BASIC_IO.INTERVAL_READ(
				this.ref_BASIC_IO,
				MININT,
				MAXINT,
				tt) ;
			this.tuc(ii) := tt ;
			ii := ii + 1 ;
		end loop ;
		this.viu1 := TRUE ;
	end mbe ;
	
	procedure mtrb(this : in PTR_ma) is
		ii : INTEGER ;
		dd : INTEGER ;
	begin
		ii := 1 ;
		while (ii <= 5) loop
			dd := this.tuc(ii) ;
			if (dd < 0)
			then
				this.tbc(ii) := TRUE ;
			else
				this.tbc(ii) := FALSE ;
			end if ;
			ii := ii + 1 ;
		end loop ;
		this.vib1c := TRUE ;
	end mtrb ;
	
	procedure mtra(this : in PTR_ma) is
		ii : INTEGER ;
		dd : INTEGER ;
	begin
		ii := 1 ;
		while (ii <= 5) loop
			dd := this.tuc(ii) ;
			if (dd > 0)
			then
				this.tac(ii) := TRUE ;
			else
				this.tac(ii) := FALSE ;
			end if ;
			ii := ii + 1 ;
		end loop ;
		this.via1c := TRUE ;
	end mtra ;
	
	procedure opm(this : in PTR_ma) is
		ii : INTEGER ;
		dd : BOOLEAN ;
		cc : BOOLEAN ;
	begin
		ii := 1 ;
		while (ii <= 5) loop
			dd := this.tac(ii) ;
			cc := this.tbc(ii) ;
			if ((dd /= TRUE) and then (cc /= TRUE))
			then
				this.tmc(ii) := TRUE ;
			else
				this.tmc(ii) := FALSE ;
			end if ;
			ii := ii + 1 ;
		end loop ;
		this.vm := TRUE ;
	end opm ;
	
	procedure ki(this : in PTR_ma) is
	begin
		BASIC_IO.BOOL_WRITE(this.ref_BASIC_IO, this.vm) ;
		BASIC_IO.STRING_WRITE(this.ref_BASIC_IO, " ") ;
		BASIC_IO.BOOL_WRITE(this.ref_BASIC_IO, this.via1c) ;
		BASIC_IO.STRING_WRITE(this.ref_BASIC_IO, " ") ;
		BASIC_IO.BOOL_WRITE(this.ref_BASIC_IO, this.vib1c) ;
		BASIC_IO.STRING_WRITE(this.ref_BASIC_IO, " ") ;
		BASIC_IO.BOOL_WRITE(this.ref_BASIC_IO, this.viu1) ;
		BASIC_IO.STRING_WRITE(this.ref_BASIC_IO, " ") ;
		BASIC_IO.STRING_WRITE(this.ref_BASIC_IO, "\n") ;
	end ki ;
	
	-- Access methods
	function get_viu1(this : in PTR_ma) return BOOLEAN is
	begin
		return this.viu1 ;
	end get_viu1 ;
	procedure set_viu1(this : in PTR_ma ; value : BOOLEAN) is
	begin
		this.viu1 := value ;
	end set_viu1 ;
	
end ma ;
